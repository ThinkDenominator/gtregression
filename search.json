[{"path":"https://thinkdenominator.github.io/gtregression/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Think Denominator Limited Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/articles/gtregression-intro.html","id":"gtregression","dir":"Articles","previous_headings":"","what":"gtregression","title":"Getting Started with gtregression","text":". gtregression R package simplifies regression modeling generates publication-ready tables using gtsummary ecosystem. supports variety regression approaches built-tools model diagnostics, selection, confounder identification—designed provide beginner intermediate R users clean, interpretable output. package created aim empowering R users low- middle-income countries (LMICs) offering simpler accessible coding experience. sincerely thank authors contributors foundational R packages gtsummary, MASS, RISKS, dplyr, others—without project possible.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/articles/gtregression-intro.html","id":"table-of-contents","dir":"Articles","previous_headings":"gtregression","what":"Table of Contents","title":"Getting Started with gtregression","text":"Vision Features Installation Quick Start Key Functions","code":""},{"path":"https://thinkdenominator.github.io/gtregression/articles/gtregression-intro.html","id":"vision","dir":"Articles","previous_headings":"gtregression","what":"Vision","title":"Getting Started with gtregression","text":"core, gtregression just statistical tool—commitment open access, simplicity, inclusivity health data science. team driven vision empowering researchers, students, public health professionals LMICs user-friendly, well-documented tools minimize coding burden maximize interpretability. believe democratization data science aim promote open-source resources impactful equitable research globally.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/articles/gtregression-intro.html","id":"features","dir":"Articles","previous_headings":"gtregression","what":"Features","title":"Getting Started with gtregression","text":"Logistic (logit) Log-binomial Poisson / Robust Poisson Negative Binomial Linear Regression Univariable multivariable regression Confounder identification using crude adjusted estimates Stepwise model selection (AIC/BIC/adjusted R²) Stratified regression support Formatted outputs using gtsummary Built-example datasets: PimaIndiansDiabetes2, birthwt, epil","code":""},{"path":"https://thinkdenominator.github.io/gtregression/articles/gtregression-intro.html","id":"installation","dir":"Articles","previous_headings":"gtregression","what":"Installation","title":"Getting Started with gtregression","text":"","code":"# Install from CRAN install.packages(\"gtregression\")  # Or install the development version from GitHub devtools::install_github(\"ThinkDenominator/gtregression\")"},{"path":"https://thinkdenominator.github.io/gtregression/articles/gtregression-intro.html","id":"quick-start","dir":"Articles","previous_headings":"gtregression","what":"Quick Start","title":"Getting Started with gtregression","text":"","code":"# Load necessary libraries library(gtregression)  # Load example dataset data(\"data_PimaIndiansDiabetes\", package=\"gtregression\")  # Convert diabetes outcome to binary and create categorical variables pima_data <- data_PimaIndiansDiabetes |>   mutate(diabetes = ifelse(diabetes == \"pos\", 1, 0)) |>   mutate(bmi = case_when(     mass < 25 ~ \"Normal\",     mass >= 25 & mass < 30 ~ \"Overweight\",     mass >= 30 ~ \"Obese\",     TRUE ~ NA_character_),                                            bmi = factor(bmi, levels = c(\"Normal\", \"Overweight\", \"Obese\")),     age_cat = case_when(       age < 30 ~ \"Young\",       age >= 30 & age < 50 ~ \"Middle-aged\",       age >= 50 ~ \"Older\"),     age_cat = factor(age_cat, levels = c(\"Young\", \"Middle-aged\", \"Older\")),     npreg_cat = ifelse(pregnant > 2, \"High parity\", \"Low parity\"),     npreg_cat = factor(npreg_cat, levels = c(\"Low parity\", \"High parity\")),     glucose_cat= case_when(glucose<=140~ \"Normal\", glucose>140~\"High\"),     glucose_cat= factor(glucose_cat, levels = c(\"Normal\", \"High\")),     bp_cat = case_when(       pressure < 80 ~ \"Normal\",       pressure >= 80 ~ \"High\"     ),     bp_cat= factor(bp_cat, levels = c(\"Normal\", \"High\")),     triceps_cat = case_when(       triceps < 23 ~ \"Normal\",       triceps >= 23 ~ \"High\"     ),     triceps_cat= factor(triceps_cat, levels = c(\"Normal\", \"High\")),     insulin_cat = case_when(       insulin < 30 ~ \"Low\",       insulin >= 30 & insulin < 150 ~ \"Normal\",       insulin >= 150 ~ \"High\"     ),     insulin_cat = factor(insulin_cat, levels = c(\"Low\", \"Normal\", \"High\"))   ) |>   mutate(     dpf_cat = case_when(       pedigree <= 0.2 ~ \"Low Genetic Risk\",       pedigree > 0.2 & pedigree <= 0.5 ~ \"Moderate Genetic Risk\",       pedigree > 0.5 ~ \"High Genetic Risk\"     )   ) |>   mutate(dpf_cat = factor(dpf_cat,                levels = c(\"Low Genetic Risk\",                            \"Moderate Genetic Risk\",                            \"High Genetic Risk\"))) |>   mutate(diabetes_cat= case_when(diabetes== 1~ \"Diabetes positive\",                                  TRUE~ \"Diabetes negative\")) |>   mutate(diabetes_cat= factor(diabetes_cat,                          levels = c(\"Diabetes negative\",\"Diabetes positive\" )))  # Descriptive statistics table exposures <- c(\"bmi\", \"age_cat\", \"npreg_cat\", \"bp_cat\", \"triceps_cat\",                \"insulin_cat\", \"dpf_cat\")  # Create a descriptive table by diabetes category des_tbl = descriptive_table(data= pima_data,                               exposures = exposures,                               by= \"diabetes_cat\")                               # Check the data compatibility dissect(pima_data)  # Univariable regression uni_tbl = uni_reg(   data = pima_data,   outcome = \"diabetes\",   exposures = exposures,   approach = \"logit\" )  # check models and summaries uni_tbl$models uni_tbl$model_summaries  # Plot univariable regression results plot_reg(uni_tbl,           title = \"Univariable Regression Results\")           # multivariable regression multi_tbl = multi_reg(   data = pima_data,   outcome = \"diabetes\",   exposures = exposures,   approach = \"logit\" )  # check models and summaries multi_tbl$models multi_tbl$model_summaries  # Plot univariable regression results plot_reg(multi_tbl,           title = \"Multivariable Regression Results\")  # combined plots plot_reg_combine(   uni_tbl,    multi_tbl,    title = \"Univariable vs Multivariable Regression Results\")    # combine the tables merge_table(des_tbl, uni_tbl, multi_tbl,              spanners = c(\"**Descriptive**\",             \"**Univariate**\",              \"**Multivariable**\"))  # Save the table as a Word document save_table(des_tbl, filename = \"des_tbl\", format = \"docx\")  save_docx(   tables = list(des_tbl, uni_tbl, multi_tbl),   filename = \"Outputs.docx\")    # Stratified regression stratified_uni_reg(pima_data,                      outcome= \"diabetes\",                      exposures =c(\"bmi\", \"insulin_cat\", \"age_cat\", \"dpf_cat\"),                      approach = \"logit\",                      stratifier = \"glucose_cat\")                       stratified_multi_reg(pima_data,                      outcome= \"diabetes\",                      exposures =c(\"bmi\", \"insulin_cat\", \"age_cat\", \"dpf_cat\"),                      approach = \"logit\",                      stratifier = \"glucose_cat\")                       # Check model convergence check_convergence(pima_data,                    exposures = exposures,                    outcome = \"diabetes\",                    approach = \"logit\",                    multivariate = F)                    check_convergence(pima_data,                    exposures = exposures,                    outcome = \"diabetes\",                    approach = \"logit\",                    multivariate = T)   # identify confounders identify_confounder(pima_data,                     outcome = \"diabetes\",                     exposure = \"npreg_cat\",                     potential_confounder = \"bp_cat\",                     approach = \"logit\")                       # check interactions interaction_models(pima_data,                    outcome,                    exposure = \"bmi\",                    effect_modifier = \"glucose_cat\",                    covariates = c(\"insulin_cat\", \"age_cat\", \"dpf_cat\"),                    approach = \"logit\")"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://thinkdenominator.github.io/gtregression/articles/gtregression-intro.html","id":"conclusion","dir":"Articles","previous_headings":"gtregression","what":"Conclusion","title":"Getting Started with gtregression","text":"gtregression package simplifies regression coding produces publication-ready tables interpretation notes. enables beginners explore variety regression models ease, transparency, reproducibility. Explore documentation function discover additional options customization features.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/articles/gtregression-intro.html","id":"citation","dir":"Articles","previous_headings":"gtregression","what":"Citation","title":"Getting Started with gtregression","text":"use gtregression work, please cite : Rubeshkumar, P., Eliyas, S. K., Sakthivel, M., Krishnamoorthy, Y., & Majella, M. G. (2025). ThinkDenominator/gtregression: CRAN v1.0.0 (CRAN). Zenodo. https://doi.org/10.5281/zenodo.16905350","code":""},{"path":"https://thinkdenominator.github.io/gtregression/articles/gtregression-intro.html","id":"acknowledgements","dir":"Articles","previous_headings":"gtregression","what":"Acknowledgements","title":"Getting Started with gtregression","text":"gtregression package icon uses “Hearts” symbol created Kim Sun Young Noun Project, used Creative Commons Attribution (CC 3.0) license.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rubeshkumar Polani. Author, maintainer. Salin K Eliyas. Author. Manikandanesan Sakthivel. Author. Yuvaraj Krishnamoorthy. Author. Marie Gilbert Majella. Author.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Polani R, Eliyas S, Sakthivel M, Krishnamoorthy Y, Majella M (2025). gtregression: Tools Creating Publication-Ready Regression Tables. R package version 1.1.0, https://thinkdenominator.github.io/gtregression/.","code":"@Manual{,   title = {gtregression: Tools for Creating Publication-Ready Regression Tables},   author = {Rubeshkumar Polani and Salin K Eliyas and Manikandanesan Sakthivel and Yuvaraj Krishnamoorthy and Marie Gilbert Majella},   year = {2025},   note = {R package version 1.1.0},   url = {https://thinkdenominator.github.io/gtregression/}, }"},{"path":"https://thinkdenominator.github.io/gtregression/index.html","id":"function-overview","dir":"","previous_headings":"","what":"Function Overview","title":"gtregression","text":"gtregression package provides regression modeling, diagnostics, plots, reporting tools designed usability accessibility. ’s summary core functions:","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_collinearity.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Collinearity Using VIF for Fitted Models — check_collinearity","title":"Check Collinearity Using VIF for Fitted Models — check_collinearity","text":"Computes Variance Inflation Factors (VIF) fitted models returned uni_reg(), multi_reg(), uni_reg_nbin(), multi_reg_nbin(). Returns one VIF table per model. multivariate models ","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_collinearity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Collinearity Using VIF for Fitted Models — check_collinearity","text":"","code":"check_collinearity(model)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_collinearity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Collinearity Using VIF for Fitted Models — check_collinearity","text":"model fitted model object class \"uni_reg\", \"multi_reg\", \"uni_reg_nbin\", \"multi_reg_nbin\".","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_collinearity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Collinearity Using VIF for Fitted Models — check_collinearity","text":"tibble containing VIF values interpretation. multivariable models, returns one tibble. univariate models, error raised indicating VIF applicable.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_collinearity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Collinearity Using VIF for Fitted Models — check_collinearity","text":"","code":"if (requireNamespace(\"gtregression\", quietly = TRUE) &&   requireNamespace(\"mlbench\", quietly = TRUE) &&   getRversion() >= \"4.1.0\") {   data(PimaIndiansDiabetes2, package = \"mlbench\")   pima <- PimaIndiansDiabetes2 |> dplyr::filter(!is.na(diabetes))   pima$diabetes <- ifelse(pima$diabetes == \"pos\", 1, 0)   fit <- multi_reg(pima,     outcome = \"diabetes\",     exposures = c(\"age\", \"mass\", \"glucose\"),     approach = \"logit\"   )   check_collinearity(fit) } #> # A tibble: 3 × 3 #>   Variable   VIF Interpretation  #>   <chr>    <dbl> <chr>           #> 1 age       1.04 No collinearity #> 2 mass      1.02 No collinearity #> 3 glucose   1.02 No collinearity"},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_convergence.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Convergence for a Regression Model — check_convergence","title":"Check Convergence for a Regression Model — check_convergence","text":"Assesses model convergence provides diagnostics exposure (univariate mode) full model (multivariable mode), depending regression approach used.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_convergence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Convergence for a Regression Model — check_convergence","text":"","code":"check_convergence(   data,   exposures,   outcome,   approach = \"logit\",   multivariate = FALSE )"},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_convergence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Convergence for a Regression Model — check_convergence","text":"data data frame containing dataset. exposures character vector predictor variable names. multivariate = FALSE, exposure assessed separately. multivariate = TRUE, exposures included together. outcome character string specifying outcome variable. approach character string specifying regression approach. One :   \"logit\", \"log-binomial\", \"poisson\",   \"robpoisson\", \"negbin\". multivariate Logical. TRUE, checks convergence multivariable model;   otherwise, performs checks univariate model.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_convergence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Convergence for a Regression Model — check_convergence","text":"data frame summarizing convergence diagnostics, including: Exposure Name exposure variable. Model regression approach used. Converged TRUE model converged successfully;    FALSE otherwise. Max.prob Maximum predicted probability   fitted value dataset.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_convergence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Convergence for a Regression Model — check_convergence","text":"robpoisson, predicted probabilities (fitted values) may exceed 1, acceptable estimating risk ratios interpreted actual probabilities. function useful identifying convergence issues, especially \"log-binomial\" models, often fail converge .","code":""},{"path":[]},{"path":"https://thinkdenominator.github.io/gtregression/reference/check_convergence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Convergence for a Regression Model — check_convergence","text":"","code":"if (requireNamespace(\"gtregression\", quietly = TRUE)) {   data(data_PimaIndiansDiabetes, package = \"gtregression\")    check_convergence(     data = data_PimaIndiansDiabetes,     exposures = c(\"age\", \"bmi\"),     outcome = \"diabetes\",     approach = \"logit\"   )    check_convergence(     data = data_PimaIndiansDiabetes,     exposures = c(\"age\", \"bmi\"),     outcome = \"diabetes\",     approach = \"logit\",     multivariate = TRUE   ) } #> Warning: Model fitting failed for the selected approach #>               Exposure Model Converged Max.prob. #> multivariable       NA logit     FALSE        NA"},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_PimaIndiansDiabetes.html","id":null,"dir":"Reference","previous_headings":"","what":"PimaIndians2 Diabetes Dataset — data_PimaIndiansDiabetes","title":"PimaIndians2 Diabetes Dataset — data_PimaIndiansDiabetes","text":"cleaned version original Pima Indians Diabetes dataset `mlbench` package. Useful demonstrating regression approaches binary outcomes.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_PimaIndiansDiabetes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PimaIndians2 Diabetes Dataset — data_PimaIndiansDiabetes","text":"","code":"data_PimaIndiansDiabetes"},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_PimaIndiansDiabetes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PimaIndians2 Diabetes Dataset — data_PimaIndiansDiabetes","text":"data frame 768 observations 9 variables: pregnant Number times pregnant glucose Plasma glucose concentration (glucose tolerance test) pressure Diastolic blood pressure (mm Hg) triceps Triceps skin fold thickness (mm) insulin 2-Hour serum insulin (mu U/ml) mass Body mass index (BMI) pedigree Diabetes pedigree function age Age years diabetes Factor indicating diabetes status (pos/neg)","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_PimaIndiansDiabetes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PimaIndians2 Diabetes Dataset — data_PimaIndiansDiabetes","text":"https://www.openml.org/d/37","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_birthwt.html","id":null,"dir":"Reference","previous_headings":"","what":"Birth Weight Data — data_birthwt","title":"Birth Weight Data — data_birthwt","text":"dataset MASS package containing risk factors associated low birth weight (LBW) newborns. Originally collected Baystate Medical Center, Springfield, Massachusetts, USA.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_birthwt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Birth Weight Data — data_birthwt","text":"","code":"data_birthwt"},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_birthwt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Birth Weight Data — data_birthwt","text":"data frame 189 observations 10 variables: low Indicator birth weight < 2500g (binary):   0 = normal, 1 = low birth weight age Mother's age years (numeric) lwt Mother's weight pounds last menstrual period (numeric) race Mother's race (factor): 1 = White, 2 = Black,   3 = smoke Smoking status pregnancy (binary): 0 = ,    1 = Yes ptl Number previous premature labors (integer) ht History hypertension (binary): 0 = , 1 = Yes ui Presence uterine irritability (binary): 0 = ,   1 = Yes ftv physician visits 1st trimester (integer, 0–6) bwt Birth weight grams (numeric)","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_birthwt.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Birth Weight Data — data_birthwt","text":"Hosmer, D.W., Lemeshow, S. (1989). *Applied Logistic Regression.* New York: Wiley. Also available MASS described detail documentation.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_birthwt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Birth Weight Data — data_birthwt","text":"outcome variable binary (`low`): birth weight < 2500g (yes = 1) (= 0).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_epilepsy.html","id":null,"dir":"Reference","previous_headings":"","what":"Epilepsy Treatment and Seizure Counts — data_epilepsy","title":"Epilepsy Treatment and Seizure Counts — data_epilepsy","text":"RCT effect drug seizures patients epilepsy. Contains repeated measures data treatment groups, baseline seizure counts, follow-counts.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_epilepsy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epilepsy Treatment and Seizure Counts — data_epilepsy","text":"","code":"data_epilepsy"},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_epilepsy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Epilepsy Treatment and Seizure Counts — data_epilepsy","text":"data frame 236 observations 9 variables: y Number seizures 2-week period (count) trt Treatment group (factor): placebo progabide base Seizure count baseline period (numeric) age Age patient (numeric) V4 Indicator 4th visit (binary) subject Patient ID (factor) period Follow-period number (integer) lbase Log baseline seizures (numeric) lage Log age (numeric)","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_epilepsy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Epilepsy Treatment and Seizure Counts — data_epilepsy","text":"MASS package. Original data Thall Vail (1990)","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_gt_quin.html","id":null,"dir":"Reference","previous_headings":"","what":"Student Absenteeism in Rural Schools — data_gt_quin","title":"Student Absenteeism in Rural Schools — data_gt_quin","text":"dataset contains observations number days absent school children rural Australia, along student characteristics. commonly used demonstrate count models Poisson Negative Binomial regression.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_gt_quin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Student Absenteeism in Rural Schools — data_gt_quin","text":"","code":"data_gt_quin"},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_gt_quin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Student Absenteeism in Rural Schools — data_gt_quin","text":"data frame 146 observations 5 variables: Eth Ethnicity (\"\" = Aboriginal,   \"N\" = Non-Aboriginal) Sex Sex (\"F\" \"M\") Age Age group (\"F0\", \"F1\", \"F2\", \"F3\") Lrn Learner status (\"AL\" = average learner,    \"SL\" = slow learner) Days Number days absent school (count outcome)","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_gt_quin.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Student Absenteeism in Rural Schools — data_gt_quin","text":"MASS package. See also Venables Ripley (2002),  *Modern Applied Statistics S*.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_infertility.html","id":null,"dir":"Reference","previous_headings":"","what":"Infertility Matched Case-Control Study — data_infertility","title":"Infertility Matched Case-Control Study — data_infertility","text":"investigating relationship infertility abortions.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_infertility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infertility Matched Case-Control Study — data_infertility","text":"","code":"data_infertility"},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_infertility.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Infertility Matched Case-Control Study — data_infertility","text":"data frame 248 observations 8 variables: education Education level (0 = 0–5 years, 1 = 6–11 years,   2 = 12+ years) age Age years parity Number prior pregnancies induced Number induced abortions case Infertility case status (1 = case, 0 = control) spontaneous Number spontaneous abortions stratum Matched set ID pooled.stratum Pooled stratum ID used conditional regression","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_infertility.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Infertility Matched Case-Control Study — data_infertility","text":"https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/infert.html","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_lungcancer.html","id":null,"dir":"Reference","previous_headings":"","what":"Lung Cancer Trial Data — data_lungcancer","title":"Lung Cancer Trial Data — data_lungcancer","text":"Survival data clinical trial lung cancer patients conducted  Veteran's Administration.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_lungcancer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lung Cancer Trial Data — data_lungcancer","text":"","code":"data_lungcancer"},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_lungcancer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lung Cancer Trial Data — data_lungcancer","text":"data frame 137 observations 8 variables: trt Treatment group (1 = standard, 2 = test) celltype Cell type (squamous, smallcell, adeno, large) time Survival time (days) status Censoring status (1 = died, 0 = censored) karno Karnofsky performance score (higher = better) diagtime Months diagnosis randomization age Age years prior Prior therapy (0 = , 10 = yes)","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_lungcancer.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lung Cancer Trial Data — data_lungcancer","text":"https://CRAN.R-project.org/package=survival","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/data_lungcancer.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lung Cancer Trial Data — data_lungcancer","text":"Kalbfleisch JD Prentice RL (1980).  Statistical Analysis Failure Time Data.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/descriptive_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Descriptive Summary Table for Study Characteristics (User-Friendly) — descriptive_table","title":"Descriptive Summary Table for Study Characteristics (User-Friendly) — descriptive_table","text":"Creates clean, publication-ready summary table using `gtsummary::tbl_summary()`. Designed beginner analysts, function applies sensible defaults flexible options display categorical continuous variables without stratification. supports one-line summaries dichotomous variables, handles missing data gracefully, includes optional \"Overall\" column comparison.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/descriptive_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Descriptive Summary Table for Study Characteristics (User-Friendly) — descriptive_table","text":"","code":"descriptive_table(   data,   exposures,   by = NULL,   percent = c(\"column\", \"row\"),   digits = 1,   show_missing = c(\"ifany\", \"no\"),   show_dichotomous = c(\"all_levels\", \"single_row\"),   show_overall = c(\"no\", \"first\", \"last\"),   statistic = NULL,   value = NULL )"},{"path":"https://thinkdenominator.github.io/gtregression/reference/descriptive_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Descriptive Summary Table for Study Characteristics (User-Friendly) — descriptive_table","text":"data data frame containing study dataset. exposures character vector specifying variable names (columns) `data` included summary table. can categorical continuous. Optional. single character string giving name grouping variable (e.g., outcome). supplied, table show stratified summaries variable. percent Character. Either `\"column\"` (default) `\"row\"`. - `\"column\"` calculates percentages within group defined ``   (.e., denominator = column total). - `\"row\"` calculates percentages across `` groups (.e., denominator =   row total). `` specified, `\"column\"` used `\"row\"` ignored. digits Integer. Controls many decimal places shown percentages means. Defaults 1. show_missing Character. One `\"ifany\"` (default) `\"\"`. - `\"ifany\"` shows missing value counts missing values exist. - `\"\"` hides missing counts entirely. show_dichotomous Character. One `\"all_levels\"` (default) `\"single_row\"`. - `\"all_levels\"` displays levels binary (dichotomous) variables. - `\"single_row\"` shows one row (typically \"Yes\", \"Present\",   user-defined level), making table compact. show_overall Character. One `\"\"` (default), `\"first\"`, `\"last\"`. `` supplied: - `\"first\"` includes column overall summaries stratified   columns. - `\"last\"` includes overall column end. - `\"\"` disables overall column. statistic Optional named vector summary types specific variables. example, use `statistic = c(age = \"mean\", bmi = \"median\")` override default summaries. Accepted values: `\"mean\"`, `\"median\"`, `\"mode\"`, `\"count\"`. value Optional. list formulas specifying level binary variable show `show_dichotomous = \"single_row\"`. example, `value = list(sex ~ \"Female\")` report \"Female\" row.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/descriptive_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Descriptive Summary Table for Study Characteristics (User-Friendly) — descriptive_table","text":"`gtsummary::tbl_summary` object additional class   `\"descriptive_table\"`. Can printed, customized, merged, exported.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/descriptive_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Descriptive Summary Table for Study Characteristics (User-Friendly) — descriptive_table","text":"","code":"# \\donttest{ if (requireNamespace(\"mlbench\", quietly = TRUE)) {   data(\"PimaIndiansDiabetes2\", package = \"mlbench\")   library(dplyr) pima <- PimaIndiansDiabetes2 |>   mutate(     diabetes = ifelse(diabetes == \"pos\", 1, 0),      bmi = cut(       mass,       breaks = c(-Inf, 18.5, 24.9, 29.9, Inf),       labels = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\")     )   )   descriptive_table(pima, exposures = c(\"age\", \"bmi\"),                     by = \"diabetes\") } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union     Characteristic       0 N = 5001       1 N = 2681     age 31.2 (11.7) 37.1 (11.0)bmi      Underweight 4 (0.8%) 0 (0.0%)    Normal 95 (19.3%) 7 (2.6%)    Overweight 139 (28.3%) 40 (15.0%)    Obese 253 (51.5%) 219 (82.3%)    Unknown 9 21 Mean (SD); n (%)     # }"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dissect.html","id":null,"dir":"Reference","previous_headings":"","what":"Dissect a Dataset Before Regression — dissect","title":"Dissect a Dataset Before Regression — dissect","text":"Returns tidy summary variable's structure, missingness, uniqueness, suitability use regression models.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dissect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dissect a Dataset Before Regression — dissect","text":"","code":"dissect(data)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dissect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dissect a Dataset Before Regression — dissect","text":"data data frame.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dissect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dissect a Dataset Before Regression — dissect","text":"tibble columns: Variable, Type, Missing ( Regression Hint.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dissect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dissect a Dataset Before Regression — dissect","text":"","code":"dissect(data_birthwt) #> # A tibble: 10 × 6 #>    Variable Type    `Missing (%)` Unique Levels Compatibility #>    <chr>    <chr>   <chr>          <int> <chr>  <chr>         #>  1 low      integer 0%                 2 -      maybe         #>  2 age      integer 0%                24 -      compatible    #>  3 lwt      integer 0%                75 -      compatible    #>  4 race     integer 0%                 3 -      compatible    #>  5 smoke    integer 0%                 2 -      maybe         #>  6 ptl      integer 0%                 4 -      compatible    #>  7 ht       integer 0%                 2 -      maybe         #>  8 ui       integer 0%                 2 -      maybe         #>  9 ftv      integer 0%                 6 -      compatible    #> 10 bwt      integer 0%               131 -      compatible    #>  #> Interpretation notes: #> - compatible: ready to use in regression #> - maybe: require transformation to factor or check no of levels #> - incompatible: not usable as-is (e.g., all NA, <2 levels)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-fit_multi_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit multivariate Regression Model (Internal) — .fit_multi_model","title":"Fit multivariate Regression Model (Internal) — .fit_multi_model","text":"Fits regression model based selected approach.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-fit_multi_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit multivariate Regression Model (Internal) — .fit_multi_model","text":"","code":".fit_multi_model(data, outcome, exposures, approach)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-fit_multi_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit multivariate Regression Model (Internal) — .fit_multi_model","text":"data `data.frame` outcome exposures. outcome string. Name outcome variable. exposures string character vector predictor(s). approach string specifying regression approach. One `\"logit\"`, `\"log-binomial\"`, `\"poisson\"`, `\"linear\"`, `\"robpoisson\"`, `\"negbin\"`.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-fit_multi_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit multivariate Regression Model (Internal) — .fit_multi_model","text":"fitted model object (`glm`, `lm`, `riskratio`, `negbin`) `NULL` fitting fails.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-fit_uni_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Regression Model with One or More Predictors (Internal) — .fit_uni_model","title":"Fit Regression Model with One or More Predictors (Internal) — .fit_uni_model","text":"Fits regression model based selected approach. Can handle single exposure vector exposures.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-fit_uni_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Regression Model with One or More Predictors (Internal) — .fit_uni_model","text":"","code":".fit_uni_model(data, outcome, exposures, approach)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-fit_uni_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Regression Model with One or More Predictors (Internal) — .fit_uni_model","text":"data `data.frame` complete observations outcome exposures. outcome string. Name outcome variable. exposures string character vector predictor(s). approach string specifying regression approach. One `\"logit\"`, `\"log-binomial\"`, `\"poisson\"`, `\"linear\"`, `\"robpoisson\"`, `\"negbin\"`.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-fit_uni_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Regression Model with One or More Predictors (Internal) — .fit_uni_model","text":"fitted model object (`glm`, `lm`, `riskratio`, `negbin`) `NULL` fitting fails.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_abbreviation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Abbreviation Explanation — .get_abbreviation","title":"Get Abbreviation Explanation — .get_abbreviation","text":"Returns plain-language abbreviation string regression approach.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_abbreviation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Abbreviation Explanation — .get_abbreviation","text":"","code":".get_abbreviation(approach)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_abbreviation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Abbreviation Explanation — .get_abbreviation","text":"approach character string regression approach.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_abbreviation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Abbreviation Explanation — .get_abbreviation","text":"character string explaining abbreviation (e.g., `\"= Odds Ratio\"`).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_effect_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Unadjusted Effect Label — .get_effect_label","title":"Get Unadjusted Effect Label — .get_effect_label","text":"Returns appropriate label (e.g., , IRR, RR, Beta) unadjusted regression estimates.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_effect_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Unadjusted Effect Label — .get_effect_label","text":"","code":".get_effect_label(approach)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_effect_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Unadjusted Effect Label — .get_effect_label","text":"approach character string regression approach. One `\"logit\"`, `\"log-binomial\"`, `\"poisson\"`, `\"robpoisson\"`, `\"linear\"`.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_effect_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Unadjusted Effect Label — .get_effect_label","text":"character string effect label, formatted markdown (e.g., `\"****\"`).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_effect_label_adjusted.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Adjusted Effect Label — .get_effect_label_adjusted","title":"Get Adjusted Effect Label — .get_effect_label_adjusted","text":"Returns markdown-formatted label adjusted estimates (e.g., Adjusted ).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_effect_label_adjusted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Adjusted Effect Label — .get_effect_label_adjusted","text":"","code":".get_effect_label_adjusted(approach)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_effect_label_adjusted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Adjusted Effect Label — .get_effect_label_adjusted","text":"approach character string regression approach.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_effect_label_adjusted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Adjusted Effect Label — .get_effect_label_adjusted","text":"character string label (e.g., `\"**Adjusted IRR**\"`).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_remove_abbreviation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Abbreviation to Remove — .get_remove_abbreviation","title":"Get Abbreviation to Remove — .get_remove_abbreviation","text":"Identifies abbreviation string removed summary table, applicable given approach.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_remove_abbreviation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Abbreviation to Remove — .get_remove_abbreviation","text":"","code":".get_remove_abbreviation(approach)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_remove_abbreviation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Abbreviation to Remove — .get_remove_abbreviation","text":"approach character string regression approach.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-get_remove_abbreviation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Abbreviation to Remove — .get_remove_abbreviation","text":"character string indicating abbreviation remove, `\"\"` none.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-reg_check_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Regression Diagnostic Checks (Internal) similar to reg check in stata Performs diagnostic tests for linear regression models: - Breusch-Pagan test for heteroskedasticity - Shapiro-Wilk test for normality of residuals - RESET test for model specification - Cook's Distance for influential points — .reg_check_linear","title":"Linear Regression Diagnostic Checks (Internal) similar to reg check in stata Performs diagnostic tests for linear regression models: - Breusch-Pagan test for heteroskedasticity - Shapiro-Wilk test for normality of residuals - RESET test for model specification - Cook's Distance for influential points — .reg_check_linear","text":"Linear Regression Diagnostic Checks (Internal) similar reg check stata Performs diagnostic tests linear regression models: - Breusch-Pagan test heteroskedasticity - Shapiro-Wilk test normality residuals - RESET test model specification - Cook's Distance influential points","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-reg_check_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Regression Diagnostic Checks (Internal) similar to reg check in stata Performs diagnostic tests for linear regression models: - Breusch-Pagan test for heteroskedasticity - Shapiro-Wilk test for normality of residuals - RESET test for model specification - Cook's Distance for influential points — .reg_check_linear","text":"","code":".reg_check_linear(model, exposure)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-reg_check_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Regression Diagnostic Checks (Internal) similar to reg check in stata Performs diagnostic tests for linear regression models: - Breusch-Pagan test for heteroskedasticity - Shapiro-Wilk test for normality of residuals - RESET test for model specification - Cook's Distance for influential points — .reg_check_linear","text":"model fitted linear model (`lm` object). exposure Character string giving name exposure variable (labeling).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-reg_check_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Regression Diagnostic Checks (Internal) similar to reg check in stata Performs diagnostic tests for linear regression models: - Breusch-Pagan test for heteroskedasticity - Shapiro-Wilk test for normality of residuals - RESET test for model specification - Cook's Distance for influential points — .reg_check_linear","text":"data frame one row per diagnostic test, including: Exposure Name exposure variable. Test Diagnostic test name. Statistic Test statistic summary (e.g., p-values). Interpretation Plain-language result interpretation.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-validate_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Exposure Variable(s) for Regression — .validate_exposures","title":"Validate Exposure Variable(s) for Regression — .validate_exposures","text":"Ensures exposure variable least two non-missing levels sufficient numeric variation support regression modelling.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-validate_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Exposure Variable(s) for Regression — .validate_exposures","text":"","code":".validate_exposures(data, exposures)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-validate_exposures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Exposure Variable(s) for Regression — .validate_exposures","text":"data data frame containing exposure variables. exposures Character vector column names validate.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/dot-validate_exposures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Exposure Variable(s) for Regression — .validate_exposures","text":"Returns TRUE valid; otherwise throws error.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/identify_confounder.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Confounders Using the Change-in-Estimate Method — identify_confounder","title":"Identify Confounders Using the Change-in-Estimate Method — identify_confounder","text":"Identifies whether one variables confounders comparing crude adjusted effect estimates primary exposure outcome. variable flagged confounder inclusion changes estimate specified threshold (default = 10","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/identify_confounder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Confounders Using the Change-in-Estimate Method — identify_confounder","text":"","code":"identify_confounder(   data,   outcome,   exposure,   potential_confounder,   approach = \"logit\",   threshold = 10 )"},{"path":"https://thinkdenominator.github.io/gtregression/reference/identify_confounder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Confounders Using the Change-in-Estimate Method — identify_confounder","text":"data data frame containing variables. outcome name outcome variable (character string). exposure primary exposure variable (character string). potential_confounder One variables test potential confounders. approach regression modeling approach. One : \"logit\", \"log-binomial\", \"poisson\", \"negbin\", \"robpoisson\", \"linear\". threshold Numeric. Percent change threshold define confounding (default = 10). absolute percent change exceeds , variable flagged confounder.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/identify_confounder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Confounders Using the Change-in-Estimate Method — identify_confounder","text":"one confounder provided, prints crude adjusted estimates confounding flag. multiple given, returns tibble : covariate Name potential confounder. crude_est Crude effect estimate. adjusted_est Adjusted estimate including confounder. pct_change Percent change crude adjusted. is_confounder Logical: whether confounding threshold exceeded.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/identify_confounder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify Confounders Using the Change-in-Estimate Method — identify_confounder","text":"Supports logistic, log-binomial, Poisson, robust Poisson, negative binomial, linear regression approaches. method evaluate effect modification. Use causal diagrams (e.g., DAGs) subject-matter knowledge supplement decisions.","code":""},{"path":[]},{"path":"https://thinkdenominator.github.io/gtregression/reference/identify_confounder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Confounders Using the Change-in-Estimate Method — identify_confounder","text":"","code":"data <- data_PimaIndiansDiabetes identify_confounder(   data = data,   outcome = \"glucose\",   exposure = \"insulin\",   potential_confounder = \"age_cat\",   approach = \"linear\" ) #>  #> ------------------------------------------------------------ #> Crude Estimate:      0.151 #> Adjusted Estimate:   NA #> % Change from Crude: NA% #> ------------------------------------------------------------ #> Confounding:         NA #> ------------------------------------------------------------ #> Notes: #> * Confounding is suggested if percent change >=10%. #> * This method does not assess effect modification. #> * Use DAGs or domain knowledge to support confounder identification."},{"path":"https://thinkdenominator.github.io/gtregression/reference/interaction_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Models With and Without Interaction Term — interaction_models","title":"Compare Models With and Without Interaction Term — interaction_models","text":"function fits two models—one one without interaction term exposure potential effect modifier— compares using either likelihood ratio test (LRT) Wald test. useful assessing whether statistical evidence interaction (effect modification).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/interaction_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Models With and Without Interaction Term — interaction_models","text":"","code":"interaction_models(   data,   outcome,   exposure,   covariates = NULL,   effect_modifier,   approach = \"logit\",   test = c(\"LRT\", \"Wald\"),   verbose = TRUE )"},{"path":"https://thinkdenominator.github.io/gtregression/reference/interaction_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Models With and Without Interaction Term — interaction_models","text":"data data frame containing required variables. outcome name outcome variable exposure name main exposure variable. covariates character vector additional covariates adjust effect_modifier name variable test interaction approach regression modeling approach use. One : \"logit\", \"log-binomial\", \"poisson\", \"robpoisson\", \"negbin\", \"linear\". test Type statistical test model comparison. Either: \"LRT\" (likelihood ratio test, default) \"Wald\". verbose Logical; TRUE, prints basic interpretation whether interaction likely present (default = FALSE).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/interaction_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Models With and Without Interaction Term — interaction_models","text":"list following elements: model_no_interaction: model without interaction term. model_with_interaction: model interaction term. p_value: p-value interaction (based selected test). interpretation: brief text interpretation   verbose = TRUE.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/interaction_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Models With and Without Interaction Term — interaction_models","text":"","code":"data <- data_PimaIndiansDiabetes"},{"path":"https://thinkdenominator.github.io/gtregression/reference/merge_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Multiple gtsummary Tables (Descriptive, Univariate, Multivariable) — merge_tables","title":"Merge Multiple gtsummary Tables (Descriptive, Univariate, Multivariable) — merge_tables","text":"Flexibly merges 2 `gtsummary` tables (e.g., `descriptive_table()`, `uni_reg()`, `multi_reg()`) single table using `tbl_merge()`. Automatically applies column spanners based order inputs.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/merge_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Multiple gtsummary Tables (Descriptive, Univariate, Multivariable) — merge_tables","text":"","code":"merge_tables(..., spanners = NULL)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/merge_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Multiple gtsummary Tables (Descriptive, Univariate, Multivariable) — merge_tables","text":"... Two `gtsummary` table objects merge. spanners Optional character vector column header titles. supplied, defaults `\"Table 1\"`, `\"Univariate\"`, `\"Multivariable\"` etc.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/merge_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Multiple gtsummary Tables (Descriptive, Univariate, Multivariable) — merge_tables","text":"merged `gtsummary::tbl_merge` object.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/merge_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Multiple gtsummary Tables (Descriptive, Univariate, Multivariable) — merge_tables","text":"","code":"# \\donttest{ if (requireNamespace(\"mlbench\", quietly = TRUE)) {   data(\"PimaIndiansDiabetes2\", package = \"mlbench\")   library(dplyr)   library(gtregression)    # Prepare data   pima <- PimaIndiansDiabetes2 |>     mutate(       diabetes = ifelse(diabetes == \"pos\", 1, 0),       bmi_cat = cut(         mass,         breaks = c(-Inf, 18.5, 24.9, 29.9, Inf),         labels = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\")       )     )    # Descriptive table   desc_tbl <- descriptive_table(pima,                                 exposures = c(\"age\", \"bmi_cat\"),                                 by = \"diabetes\")    # Univariate logistic regression   uni_tbl <- uni_reg(     data = pima,     outcome = \"diabetes\",     exposures = c(\"age\", \"bmi_cat\"),     approach = \"logit\"   )    # Multivariable logistic regression   multi_tbl <- multi_reg(     data = pima,     outcome = \"diabetes\",     exposures = c(\"age\", \"bmi_cat\"),     approach = \"logit\"   )    # Merge descriptive + univariate + multivariate   merge_tables(desc_tbl, uni_tbl, multi_tbl)    # Merge with custom spanners   merge_tables(desc_tbl, uni_tbl, spanners = c(\"Summary\", \"Crude\"))    # Merge just uni and multi   merge_tables(uni_tbl, multi_tbl) } #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: collapsing to unique 'x' values #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred     Characteristic                Table 1                       Table 2            N       OR       95% CI       p-value       Adjusted OR       95% CI       p-value     age 768 1.04 1.03, 1.06 <0.001 1.05 1.03, 1.06 <0.001bmi_cat 757          Underweight  — —  — —     Normal  156,076 0.00,  >0.9 92,942 0.00,  >0.9    Overweight  609,548 0.00,  >0.9 380,559 0.00,  >0.9    Obese  1,833,523 0.00,  >0.9 1,189,166 0.00,  >0.9Abbreviations: CI = Confidence Interval, OR = Odds Ratio     N = 757 complete observations included in the multivariate model     # }"},{"path":"https://thinkdenominator.github.io/gtregression/reference/modify_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify Regression Table Labels and Layout — modify_table","title":"Modify Regression Table Labels and Layout — modify_table","text":"Allows customization labels, headers, layout regression tables created using `gtsummary`. Designed tables functions like `uni_reg()`, `multi_reg()`, etc.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/modify_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify Regression Table Labels and Layout — modify_table","text":"","code":"modify_table(   gt_table,   variable_labels = NULL,   level_labels = NULL,   header_labels = NULL,   caption = NULL,   bold_labels = FALSE,   bold_levels = FALSE,   remove_N = FALSE,   remove_N_obs = FALSE,   remove_abbreviations = FALSE,   caveat = NULL )"},{"path":"https://thinkdenominator.github.io/gtregression/reference/modify_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify Regression Table Labels and Layout — modify_table","text":"gt_table `gtsummary` table object. variable_labels named vector relabeling variable names. level_labels named list relabeling levels variables. structured `list(var1 = c(old1 = new1, old2 = new2), ...)`. header_labels named vector relabeling column headers. Names match internal column names (e.g., `\"estimate\"`, `\"p.value\"`). caption character string used set table title. bold_labels Logical. `TRUE`, bolds variable labels. bold_levels Logical. `TRUE`, bolds factor level labels. remove_N Logical. `TRUE`, hides `N` column univariate regression tables (`uni_reg`, `uni_reg_nbin`). Ignored tables. remove_N_obs Logical. `TRUE`, removes source note showing observations multivariable models (`multi_reg`, `multi_reg_nbin`). remove_abbreviations Logical. `TRUE`, removes default footnotes estimate abbreviations. caveat character string add footnote (source note) table, e.g., \"N may vary due missing data.\"","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/modify_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify Regression Table Labels and Layout — modify_table","text":"customized `gtsummary` table object modified labels, layout, options.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/modify_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify Regression Table Labels and Layout — modify_table","text":"","code":"# \\donttest{ if (requireNamespace(\"mlbench\", quietly = TRUE)) {   data(\"PimaIndiansDiabetes2\", package = \"mlbench\")   library(dplyr)   library(gtregression)    # Prepare data   pima <- PimaIndiansDiabetes2 |>     mutate(       diabetes = ifelse(diabetes == \"pos\", 1, 0),       bmi_cat = cut(         mass,         breaks = c(-Inf, 18.5, 24.9, 29.9, Inf),         labels = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\")       )     )    # Descriptive table   desc_tbl <- descriptive_table(pima,                                 exposures = c(\"age\", \"bmi_cat\"),                                 by = \"diabetes\")    # Univariate logistic regression   uni_rr <- uni_reg(     data = pima,     outcome = \"diabetes\",     exposures = c(\"age\", \"bmi_cat\"),     approach = \"logit\"   ) } #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: collapsing to unique 'x' values # }"},{"path":"https://thinkdenominator.github.io/gtregression/reference/multi_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariable Regression (Adjusted Odds, Risk, or Rate Ratios) — multi_reg","title":"Multivariable Regression (Adjusted Odds, Risk, or Rate Ratios) — multi_reg","text":"Fits multivariable regression models binary, count, continuous outcomes returns publication-ready summary table using `gtsummary`. Depending specified `approach`, function estimates adjusted Odds Ratios (), Risk Ratios (RR), Incidence Rate Ratios (IRR), Beta coefficients.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/multi_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariable Regression (Adjusted Odds, Risk, or Rate Ratios) — multi_reg","text":"","code":"multi_reg(data, outcome, exposures, approach = \"logit\")"},{"path":"https://thinkdenominator.github.io/gtregression/reference/multi_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariable Regression (Adjusted Odds, Risk, or Rate Ratios) — multi_reg","text":"data data frame containing analysis variables. outcome name outcome variable. Must character string. exposures character vector predictor variables include. approach Modeling approach use. One : - `\"logit\"` logistic regression (), - `\"log-binomial\"` log-binomial regression (RR), - `\"poisson\"` Poisson regression (IRR), - `\"robpoisson\"` robust Poisson regression (RR), - `\"linear\"` linear regression (Beta coefficients), - `\"negbin\"` negative binomial regression (IRR).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/multi_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariable Regression (Adjusted Odds, Risk, or Rate Ratios) — multi_reg","text":"object class `multi_reg`, extending   `gtsummary::tbl_regression`. Additional components can accessed using: x$models: List fitted model objects. x$model_summaries: List summary outputs. x$reg_check: Regression diagnostics (linear models). x$table: Returns main regression table.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/multi_reg.html","id":"accessors","dir":"Reference","previous_headings":"","what":"Accessors","title":"Multivariable Regression (Adjusted Odds, Risk, or Rate Ratios) — multi_reg","text":"$models List fitted model objects. $model_summaries tibble tidy regression   summaries model.","code":""},{"path":[]},{"path":"https://thinkdenominator.github.io/gtregression/reference/multi_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariable Regression (Adjusted Odds, Risk, or Rate Ratios) — multi_reg","text":"","code":"if (requireNamespace(\"mlbench\", quietly = TRUE)) {   data(PimaIndiansDiabetes2, package = \"mlbench\")   pima <- dplyr::mutate(PimaIndiansDiabetes2,   diabetes = ifelse(diabetes == \"pos\", 1, 0))   model <- multi_reg(     data = pima,     outcome = \"diabetes\",     exposures = c(\"age\", \"mass\"),     approach = \"logit\"   )  print(model) } #> <div id=\"aiqzbmhjzp\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#aiqzbmhjzp table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #aiqzbmhjzp thead, #aiqzbmhjzp tbody, #aiqzbmhjzp tfoot, #aiqzbmhjzp tr, #aiqzbmhjzp td, #aiqzbmhjzp th { #>   border-style: none; #> } #>  #> #aiqzbmhjzp p { #>   margin: 0; #>   padding: 0; #> } #>  #> #aiqzbmhjzp .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #aiqzbmhjzp .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #aiqzbmhjzp .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #aiqzbmhjzp .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #aiqzbmhjzp .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #aiqzbmhjzp .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #aiqzbmhjzp .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #aiqzbmhjzp .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #aiqzbmhjzp .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #aiqzbmhjzp .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #aiqzbmhjzp .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #aiqzbmhjzp .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #aiqzbmhjzp .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #aiqzbmhjzp .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #aiqzbmhjzp .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #aiqzbmhjzp .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #aiqzbmhjzp .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #aiqzbmhjzp .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #aiqzbmhjzp .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #aiqzbmhjzp .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #aiqzbmhjzp .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #aiqzbmhjzp .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #aiqzbmhjzp .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #aiqzbmhjzp .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #aiqzbmhjzp .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #aiqzbmhjzp .gt_left { #>   text-align: left; #> } #>  #> #aiqzbmhjzp .gt_center { #>   text-align: center; #> } #>  #> #aiqzbmhjzp .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #aiqzbmhjzp .gt_font_normal { #>   font-weight: normal; #> } #>  #> #aiqzbmhjzp .gt_font_bold { #>   font-weight: bold; #> } #>  #> #aiqzbmhjzp .gt_font_italic { #>   font-style: italic; #> } #>  #> #aiqzbmhjzp .gt_super { #>   font-size: 65%; #> } #>  #> #aiqzbmhjzp .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #aiqzbmhjzp .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #aiqzbmhjzp .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #aiqzbmhjzp .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #aiqzbmhjzp .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #aiqzbmhjzp .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #aiqzbmhjzp .gt_indent_5 { #>   text-indent: 25px; #> } #>  #> #aiqzbmhjzp .katex-display { #>   display: inline-flex !important; #>   margin-bottom: 0.75em !important; #> } #>  #> #aiqzbmhjzp div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { #>   height: 0px !important; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"label\"><span class='gt_from_md'><strong>Characteristic<\/strong><\/span><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"estimate\"><span class='gt_from_md'><strong>Adjusted OR<\/strong><\/span><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"conf.low\"><span class='gt_from_md'><strong>95% CI<\/strong><\/span><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"p.value\"><span class='gt_from_md'><strong>p-value<\/strong><\/span><\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">age<\/td> #> <td headers=\"estimate\" class=\"gt_row gt_center\">1.05<\/td> #> <td headers=\"conf.low\" class=\"gt_row gt_center\">1.03, 1.06<\/td> #> <td headers=\"p.value\" class=\"gt_row gt_center\"><0.001<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">mass<\/td> #> <td headers=\"estimate\" class=\"gt_row gt_center\">1.11<\/td> #> <td headers=\"conf.low\" class=\"gt_row gt_center\">1.09, 1.14<\/td> #> <td headers=\"p.value\" class=\"gt_row gt_center\"><0.001<\/td><\/tr> #>   <\/tbody> #>   <tfoot class=\"gt_sourcenotes\"> #>     <tr> #>       <td class=\"gt_sourcenote\" colspan=\"4\"><span class='gt_from_md'>Abbreviations: CI = Confidence Interval, OR = Odds Ratio<\/span><\/td> #>     <\/tr> #>     <tr> #>       <td class=\"gt_sourcenote\" colspan=\"4\"><span class='gt_from_md'>N = 757 complete observations included in the multivariate model<\/span><\/td> #>     <\/tr> #>   <\/tfoot> #>    #> <\/table> #> <\/div>"},{"path":"https://thinkdenominator.github.io/gtregression/reference/plot_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize a Regression Model as a Forest Plot — plot_reg","title":"Visualize a Regression Model as a Forest Plot — plot_reg","text":"Creates forest plot `gtsummary` object. Supports univariate multivariable models hierarchical labels categorical variables. Designed work seamlessly outputs functions like `uni_reg()` `multi_reg()`.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/plot_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize a Regression Model as a Forest Plot — plot_reg","text":"","code":"plot_reg(   tbl,   title = NULL,   ref_line = NULL,   order_y = NULL,   log_x = FALSE,   xlim = NULL,   breaks = NULL,   point_color = \"#1F77B4\",   errorbar_color = \"#4C4C4C\",   base_size = 14,   show_ref = TRUE,   sig_color = \"\",   sig_errorbar_color = \"\" )"},{"path":"https://thinkdenominator.github.io/gtregression/reference/plot_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize a Regression Model as a Forest Plot — plot_reg","text":"tbl gtsummary object regression functions title Optional plot title ref_line Reference line; NULL, uses 0 linear 1 otherwise order_y Optional character vector customise y-axis order log_x Logical. TRUE, log x-axis (ignored linear) xlim Optional numeric vector x-axis limits breaks Optional numeric vector x-axis tick breaks point_color Fill color points (default \"#1F77B4\") errorbar_color Color error bars (default \"#4C4C4C\") base_size Base font size show_ref Logical. TRUE, includes reference plot sig_color Optional fill color significant points; \"\" (default), significance highlighting disabled sig_errorbar_color Optional color significant error bars; \"\" (default), bars stay `errorbar_color`","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/plot_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize a Regression Model as a Forest Plot — plot_reg","text":"`ggplot2` object representing forest plot.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/plot_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize a Regression Model as a Forest Plot — plot_reg","text":"","code":"# \\donttest{ if (requireNamespace(\"mlbench\", quietly = TRUE)) {   data(\"PimaIndiansDiabetes2\", package = \"mlbench\")   library(dplyr)   library(gtregression)    # Prepare data   pima <- PimaIndiansDiabetes2 |>     mutate(       diabetes = ifelse(diabetes == \"pos\", 1, 0),       bmi_cat = cut(         mass,         breaks = c(-Inf, 18.5, 24.9, 29.9, Inf),         labels = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\")       )     )    # Univariate logistic regression   uni_rr <- uni_reg(     data = pima,     outcome = \"diabetes\",     exposures = c(\"age\", \"bmi_cat\"),     approach = \"logit\"   )   plot_reg(uni_rr) } #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: collapsing to unique 'x' values #> `height` was translated to `width`.  # }"},{"path":"https://thinkdenominator.github.io/gtregression/reference/plot_reg_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Univariate and Multivariable Regression Side-by-Side — plot_reg_combine","title":"Visualize Univariate and Multivariable Regression Side-by-Side — plot_reg_combine","text":"Generates side--side forest plots compare univariate & multivariable results.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/plot_reg_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Univariate and Multivariable Regression Side-by-Side — plot_reg_combine","text":"","code":"plot_reg_combine(   tbl_uni,   tbl_multi,   title_uni = NULL,   title_multi = NULL,   ref_line = NULL,   order_y = NULL,   log_x = FALSE,   point_color = \"#1F77B4\",   errorbar_color = \"#4C4C4C\",   base_size = 14,   show_ref = TRUE,   sig_color = \"\",   sig_errorbar_color = \"\",   xlim_uni = NULL,   breaks_uni = NULL,   xlim_multi = NULL,   breaks_multi = NULL )"},{"path":"https://thinkdenominator.github.io/gtregression/reference/plot_reg_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Univariate and Multivariable Regression Side-by-Side — plot_reg_combine","text":"tbl_uni `gtsummary` object `uni_reg()`, etc. tbl_multi `gtsummary` object `multi_reg()`, etc. title_uni Optional plot title univariate panel. title_multi Optional plot title multivariable panel. ref_line Reference line panels; NULL, uses 0 linear 1 otherwise. order_y Optional character vector customize y-axis group order. log_x Logical. TRUE, x-axes log-transformed (ignored linear). point_color Fill color non-significant points (default \"#1F77B4\"). errorbar_color Color non-significant error bars (default \"#4C4C4C\"). base_size Base font size (default 14). show_ref Logical. TRUE, includes reference rows panels. sig_color Optional fill color significant points; \"\" (default), disable highlighting. sig_errorbar_color Optional color significant error bars; \"\" (default), disable highlighting. xlim_uni Optional c(min, max) univariate x-axis. breaks_uni Optional numeric vector breaks univariate x-axis. xlim_multi Optional c(min, max) multivariable x-axis. breaks_multi Optional numeric vector breaks multivariable x-axis.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/plot_reg_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Univariate and Multivariable Regression Side-by-Side — plot_reg_combine","text":"`patchwork` object two `ggplot2` forest plots side--side.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/plot_reg_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Univariate and Multivariable Regression Side-by-Side — plot_reg_combine","text":"","code":"# \\donttest{ if (requireNamespace(\"mlbench\", quietly = TRUE)) {   data(\"PimaIndiansDiabetes2\", package = \"mlbench\")   library(dplyr)   library(gtregression)    # Prepare data   pima <- PimaIndiansDiabetes2 |>     mutate(       diabetes = ifelse(diabetes == \"pos\", 1, 0),       bmi_cat = cut(         mass,         breaks = c(-Inf, 18.5, 24.9, 29.9, Inf),         labels = c(\"Underweight\", \"Normal\", \"Overweight\", \"Obese\")       ),       age_cat = cut(         age,         breaks = c(-Inf, 29, 49, Inf),         labels = c(\"Young\", \"Middle-aged\", \"Older\")       )     )    # Univariate logistic regression   uni_rr <- uni_reg(     data = pima,     outcome = \"diabetes\",     exposures = c(\"age_cat\", \"bmi_cat\"),     approach = \"logit\"   )    # Multivariable logistic regression   multi_rr <- multi_reg(     data = pima,     outcome = \"diabetes\",     exposures = c(\"age_cat\", \"bmi_cat\"),     approach = \"logit\"   )    # Combined plot   plot_reg_combine(uni_rr, multi_rr) } #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: collapsing to unique 'x' values #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> `height` was translated to `width`. #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_vline()`). #> `height` was translated to `width`. #> Warning: Removed 3 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_vline()`).  # }"},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_docx.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Multiple Tables and Plots to a Word Document — save_docx","title":"Save Multiple Tables and Plots to a Word Document — save_docx","text":"Saves collection gtsummary tables ggplot2 plots .docx file.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_docx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Multiple Tables and Plots to a Word Document — save_docx","text":"","code":"save_docx(tables = NULL, plots = NULL, filename = \"report.docx\", titles = NULL)"},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_docx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Multiple Tables and Plots to a Word Document — save_docx","text":"tables list gtsummary tables. plots list ggplot2 plot objects. filename File name output (without .docx extension). titles Optional. character vector titles.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_docx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Multiple Tables and Plots to a Word Document — save_docx","text":"Word document saved temporary directory (path given). object returned.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_docx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Multiple Tables and Plots to a Word Document — save_docx","text":"","code":"# \\donttest{ library(gtsummary) library(ggplot2) tbl <- tbl_regression(glm(mpg ~ hp + wt, data = mtcars)) p <- ggplot(mtcars, aes(x = wt, y = mpg)) +   geom_point() save_docx(   tables = list(tbl),   plots = list(p),   filename = file.path(tempdir(), \"report.docx\"),   titles = c(\"Table 1: Regression\", \"Figure 1: Scatterplot\") ) #> Word document saved at: /tmp/Rtmp6fW40O/report.docx #> If tables or plots extend beyond the page, consider switching to landscape layout in Word (Layout > Orientation > Landscape). # }"},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a Single Plot — save_plot","title":"Save a Single Plot — save_plot","text":"Saves ggplot2 plot file PNG, PDF, JPG format.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a Single Plot — save_plot","text":"","code":"save_plot(   plot,   filename = \"plot\",   format = c(\"png\", \"pdf\", \"jpg\"),   width = 8,   height = 6,   dpi = 300 )"},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a Single Plot — save_plot","text":"plot ggplot2 object. filename Name file save, without extension. format Output format. One \"png\", \"pdf\", \"jpg\". width Width saved plot inches. height Height saved plot inches. dpi Resolution plot dots per inch (default 300).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a Single Plot — save_plot","text":"Saves file temporary directory (path given).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a Single Plot — save_plot","text":"","code":"# \\donttest{ library(ggplot2) p <- ggplot(mtcars, aes(x = wt, y = mpg)) +   geom_point() save_plot(p, filename = file.path(tempdir(), \"scatterplot\"), format = \"png\") #> Plot saved at: /tmp/Rtmp6fW40O/scatterplot.png # }"},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a Single Regression Table — save_table","title":"Save a Single Regression Table — save_table","text":"Saves gtsummary table Word, PDF, HTML file","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a Single Regression Table — save_table","text":"","code":"save_table(tbl, filename = \"table\", format = c(\"docx\", \"pdf\", \"html\"))"},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a Single Regression Table — save_table","text":"tbl gtsummary object (e.g., tbl_regression(), tbl_summary()). filename File name save output. Extension optional. format Output format. One \"docx\", \"pdf\", \"html\".","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a Single Regression Table — save_table","text":"Saves file temporary directory (path given). return object.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/save_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a Single Regression Table — save_table","text":"","code":"# \\donttest{ model <- glm(mpg ~ hp + wt, data = mtcars) tbl <- gtsummary::tbl_regression(model) save_table(tbl, filename = file.path(tempdir(), \"regression_table\"), format = \"docx\") #> Table saved at: /tmp/Rtmp6fW40O/regression_table.docx # }"},{"path":"https://thinkdenominator.github.io/gtregression/reference/select_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Stepwise Model Selection with Evaluation Metrics — select_models","title":"Stepwise Model Selection with Evaluation Metrics — select_models","text":"Performs stepwise model selection using forward, backward, directions  across different regression approaches. Returns summary table evaluation metrics (AIC, BIC, log-likelihood, deviance) best model.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/select_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stepwise Model Selection with Evaluation Metrics — select_models","text":"","code":"select_models(   data,   outcome,   exposures,   approach = \"logit\",   direction = \"forward\" )"},{"path":"https://thinkdenominator.github.io/gtregression/reference/select_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stepwise Model Selection with Evaluation Metrics — select_models","text":"data data frame containing outcome predictor variables. outcome character string indicating outcome variable. exposures vector predictor variables consider model. approach Regression method. One : \"logit\", \"log-binomial\", \"poisson\", \"robpoisson\", \"negbin\", \"linear\". direction Stepwise selection direction. One : \"forward\" (default), \"backward\", \"\".","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/select_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stepwise Model Selection with Evaluation Metrics — select_models","text":"list following components: results_table: tibble summarising tested model's metric   (AIC, BIC, deviance, log-likelihood, adjusted R² applicable). best_model: best-fitting model object based low AIC. all_models: named list fitted models.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/select_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stepwise Model Selection with Evaluation Metrics — select_models","text":"","code":"data <- data_PimaIndiansDiabetes stepwise <- select_models(   data = data,   outcome = \"glucose\",   exposures = c(\"age\", \"pregnant\", \"mass\"),   approach = \"linear\",   direction = \"forward\" ) summary(stepwise) #>               Length Class  Mode #> results_table  8     tbl_df list #> best_model    13     lm     list #> all_models     3     -none- list stepwise$results_table #> # A tibble: 3 × 8 #>   model_id formula              n_predictors   AIC   BIC logLik deviance adj_r2 #>      <dbl> <chr>                       <int> <dbl> <dbl>  <dbl>    <dbl>  <dbl> #> 1        1 glucose ~ 1                     1 7386. 7395. -3691.  710508. 0      #> 2        2 glucose ~ mass                  2 7242. 7256. -3618.  665157. 0.0529 #> 3        3 glucose ~ mass + age            2 7190. 7209. -3591.  618925. 0.118  stepwise$best_model #>  #> Call: #> lm(formula = glucose ~ mass + age, data = data) #>  #> Coefficients: #> (Intercept)         mass          age   #>     67.0644       1.0029       0.6702   #>"},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_multi_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified Multivariable Regression (Adjusted OR, RR, IRR, or Beta) — stratified_multi_reg","title":"Stratified Multivariable Regression (Adjusted OR, RR, IRR, or Beta) — stratified_multi_reg","text":"Performs multivariable regression multiple exposures binary, count, continuous outcome, stratified specified variable. NA values stratifier excluded analysis.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_multi_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified Multivariable Regression (Adjusted OR, RR, IRR, or Beta) — stratified_multi_reg","text":"","code":"stratified_multi_reg(data, outcome, exposures, stratifier, approach = \"logit\")"},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_multi_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratified Multivariable Regression (Adjusted OR, RR, IRR, or Beta) — stratified_multi_reg","text":"data data frame containing variables. outcome name outcome variable. exposures vector specifying predictor (exposure) variables. stratifier character string specifying stratifying variable. approach Modeling approach use. One : `\"logit\"` (Adjusted Odds Ratios), `\"log-binomial\"` (Adjusted Risk Ratios), `\"poisson\"` (Adjusted IRRs), `\"robpoisson\"` (Adjusted RRs), `\"linear\"` (Beta coefficients), `\"negbin\"` (Adjusted IRRs).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_multi_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratified Multivariable Regression (Adjusted OR, RR, IRR, or Beta) — stratified_multi_reg","text":"object class `stratified_multi_reg`, includes: - `table`: `gtsummary::tbl_stack` object regression tables stratum, - `models`: named list model objects stratum, - `model_summaries`: list tidy model summaries, - `reg_check`: Diagnostics results (available model type).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_multi_reg.html","id":"accessors","dir":"Reference","previous_headings":"","what":"Accessors","title":"Stratified Multivariable Regression (Adjusted OR, RR, IRR, or Beta) — stratified_multi_reg","text":"$table Stacked table stratified regression outputs. $models Named list fitted models per stratum. $model_summaries Tidy summaries model. $reg_check Regression diagnostic checks (applicable).","code":""},{"path":[]},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_multi_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratified Multivariable Regression (Adjusted OR, RR, IRR, or Beta) — stratified_multi_reg","text":"","code":"if (requireNamespace(\"mlbench\", quietly = TRUE) &&   requireNamespace(\"dplyr\", quietly = TRUE)) {   data(PimaIndiansDiabetes2, package = \"mlbench\")   pima <- dplyr::mutate(     PimaIndiansDiabetes2,     diabetes = ifelse(diabetes == \"pos\", 1, 0),     glucose_cat = dplyr::case_when(       glucose < 140 ~ \"Normal\",       glucose >= 140 ~ \"High\"     )   )   stratified_multi <- stratified_multi_reg(     data = pima,     outcome = \"diabetes\",     exposures = c(\"age\", \"mass\"),     stratifier = \"glucose_cat\",     approach = \"logit\"   )   stratified_multi$table } #> Running stratified multivariable regression by: glucose_cat #>   > Stratum: glucose_cat = High #>   > Stratum: glucose_cat = Normal     Characteristic                glucose_cat = High                       glucose_cat = Normal            Adjusted OR       95% CI       p-value       Adjusted OR       95% CI       p-value     age 1.02 1.00, 1.05 0.12 1.04 1.02, 1.06 <0.001mass 1.07 1.02, 1.13 0.005 1.10 1.07, 1.14 <0.001Abbreviations: CI = Confidence Interval, OR = Odds Ratio     glucose_cat = High: N = 197 complete cases included per stratumglucose_cat = Normal: N = 555 complete cases included per stratum"},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_uni_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs univariate regression for each exposure on a binary, count, or continuous outcome, stratified by a specified variable. Produces a stacked `gtsummary` table with one column per stratum, along with underlying models and diagnostics. — stratified_uni_reg","title":"Performs univariate regression for each exposure on a binary, count, or continuous outcome, stratified by a specified variable. Produces a stacked `gtsummary` table with one column per stratum, along with underlying models and diagnostics. — stratified_uni_reg","text":"Performs univariate regression exposure binary, count, continuous outcome, stratified specified variable. Produces stacked `gtsummary` table one column per stratum, along underlying models diagnostics.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_uni_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs univariate regression for each exposure on a binary, count, or continuous outcome, stratified by a specified variable. Produces a stacked `gtsummary` table with one column per stratum, along with underlying models and diagnostics. — stratified_uni_reg","text":"","code":"stratified_uni_reg(data, outcome, exposures, stratifier, approach = \"logit\")"},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_uni_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs univariate regression for each exposure on a binary, count, or continuous outcome, stratified by a specified variable. Produces a stacked `gtsummary` table with one column per stratum, along with underlying models and diagnostics. — stratified_uni_reg","text":"data data frame containing variables. outcome name outcome variable. exposures vector specifying predictor (exposure) variables. stratifier character string specifying stratifier approach Modeling approach use. One : `\"logit\"` (Odds Ratios), `\"log-binomial\"` (Risk Ratios), `\"poisson\"` (Incidence Rate Ratios), `\"robpoisson\"` (Robust RR),  `\"linear\"` (Beta coefficients), `\"negbin\"` (Incidence Rate Ratios),.","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_uni_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs univariate regression for each exposure on a binary, count, or continuous outcome, stratified by a specified variable. Produces a stacked `gtsummary` table with one column per stratum, along with underlying models and diagnostics. — stratified_uni_reg","text":"object class `stratified_uni_reg`, includes: - `table`: `gtsummary::tbl_stack` object stratified results, - `models`: list fitted models stratum, - `model_summaries`: tidy list model summaries, - `reg_check`: tibble regression diagnostics (available).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_uni_reg.html","id":"accessors","dir":"Reference","previous_headings":"","what":"Accessors","title":"Performs univariate regression for each exposure on a binary, count, or continuous outcome, stratified by a specified variable. Produces a stacked `gtsummary` table with one column per stratum, along with underlying models and diagnostics. — stratified_uni_reg","text":"$table Stacked stratified regression table. $models List fitted model objects stratum. $model_summaries List tidy model summaries. $reg_check Diagnostic check results (applicable).","code":""},{"path":[]},{"path":"https://thinkdenominator.github.io/gtregression/reference/stratified_uni_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs univariate regression for each exposure on a binary, count, or continuous outcome, stratified by a specified variable. Produces a stacked `gtsummary` table with one column per stratum, along with underlying models and diagnostics. — stratified_uni_reg","text":"","code":"if (requireNamespace(\"mlbench\", quietly = TRUE) &&   requireNamespace(\"dplyr\", quietly = TRUE)) {   data(PimaIndiansDiabetes2, package = \"mlbench\")   pima <- dplyr::mutate(     PimaIndiansDiabetes2,     diabetes = ifelse(diabetes == \"pos\", 1, 0),     glucose_cat = dplyr::case_when(       glucose < 140 ~ \"Normal\",       glucose >= 140 ~ \"High\"     )   )   stratified_uni <- stratified_uni_reg(     data = pima,     outcome = \"diabetes\",     exposures = c(\"age\", \"mass\"),     stratifier = \"glucose_cat\",     approach = \"logit\"   )   stratified_uni$table } #> Running stratified univariate regression by: glucose_cat #>   > Stratum: glucose_cat = High #>   > Stratum: glucose_cat = Normal     Characteristic                glucose_cat = High                       glucose_cat = Normal            N       OR       95% CI       p-value       N       OR       95% CI       p-value     age 197 1.01 0.99, 1.04 0.3 566 1.04 1.02, 1.06 <0.001mass 197 1.07 1.02, 1.12 0.010 555 1.10 1.07, 1.14 <0.001Abbreviations: CI = Confidence Interval, OR = Odds Ratio"},{"path":"https://thinkdenominator.github.io/gtregression/reference/uni_reg.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate regression (Odds, Risk, or Rate Ratios) — uni_reg","title":"Univariate regression (Odds, Risk, or Rate Ratios) — uni_reg","text":"Performs univariate regression exposure binary, continuous, count outcome. Depending `approach`, returns either Odds Ratios (), Risk Ratios (RR), Incidence Rate Ratios (IRR).","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/uni_reg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate regression (Odds, Risk, or Rate Ratios) — uni_reg","text":"","code":"uni_reg(data, outcome, exposures, approach = \"logit\")"},{"path":"https://thinkdenominator.github.io/gtregression/reference/uni_reg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate regression (Odds, Risk, or Rate Ratios) — uni_reg","text":"data data frame containing variables. outcome outcome variable (binary, continuous, count). exposures vector predictor variables. approach Modeling approach use. One : `\"logit\"` (), `\"log-binomial\"` (RR), `\"poisson\"` (IRR), `\"robpoisson\"` (RR), `\"linear\"` (Beta coefficients), `\"negbin\"` (IRR)","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/uni_reg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Univariate regression (Odds, Risk, or Rate Ratios) — uni_reg","text":"list class `uni_reg` `gtsummary::tbl_stack`, including: publication-ready regression table (`tbl_stack`) Accessor elements: `$models`: Fitted regression models exposure `$model_summaries`: Tidy model summaries `$reg_check`: Diagnostics (linear regression)","code":""},{"path":"https://thinkdenominator.github.io/gtregression/reference/uni_reg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Univariate regression (Odds, Risk, or Rate Ratios) — uni_reg","text":"function requires following packages: `dplyr`, `purrr`, `gtsummary`, `risks`.","code":""},{"path":[]},{"path":"https://thinkdenominator.github.io/gtregression/reference/uni_reg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate regression (Odds, Risk, or Rate Ratios) — uni_reg","text":"","code":"data(PimaIndiansDiabetes2, package = \"mlbench\") library(dplyr) pima <- PimaIndiansDiabetes2 |>   dplyr::mutate(diabetes = ifelse(diabetes == \"pos\", 1, 0)) uni_reg(pima, outcome = \"diabetes\", exposures = \"age\", approach = \"logit\")     Characteristic       N       OR       95% CI       p-value     age 768 1.04 1.03, 1.06 <0.001Abbreviations: CI = Confidence Interval, OR = Odds Ratio"},{"path":"https://thinkdenominator.github.io/gtregression/news/index.html","id":"gtregression-100","dir":"Changelog","previous_headings":"","what":"gtregression 1.0.0","title":"gtregression 1.0.0","text":"CRAN release: 2025-08-18 Initial release gtregression. Added support logit, log-binomial, linear, Poisson, roboisson, negative binomial models. Added functions confounder identification, model selection, diagnostics, plotting, saving output. Added forest plot functions (plot_reg, plot_reg_combine) Improved documentation homepage","code":""},{"path":[]},{"path":"https://thinkdenominator.github.io/gtregression/news/index.html","id":"added-1-1-0","dir":"Changelog","previous_headings":"","what":"Added","title":"gtregression 1.1.0 — 2025-09-07","text":"Shiny GUI modularized (import, descriptive, regression, advanced). Reproducible-code panes tables/models. ## Changed Improved validation helpers; clearer error messages. ## Fixed Stratified combine UI; PDF/PNG export reliability.","code":""}]
